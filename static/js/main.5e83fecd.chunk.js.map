{"version":3,"sources":["Buy.js","App.js","reportWebVitals.js","index.js"],"names":["Buy","useState","isBought","buy","clickHandler","className","onClick","App","props","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAuBeA,MArBf,WAAgB,IAAD,EACaC,oBAAS,GADtB,mBACJC,EADI,KACMC,EADN,KAGLC,EAAe,SAACF,GAClBC,EAAID,IAGR,OACI,gCAEIA,EAAW,sBAAMG,UAAY,YAAlB,mEACT,sBAAMA,UAAY,gBAAlB,0CAEF,uBAEIH,EAAW,wBAAQG,UAAY,WAAWC,QAAW,kBAAMF,GAAa,IAA7D,kBACT,wBAAQC,UAAY,UAAUC,QAAW,kBAAMF,GAAa,IAA5D,qBCJHG,MAXf,SAAcC,GACZ,OACE,qBAAKH,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,iFACA,cAAC,EAAD,UCIOI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5e83fecd.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction Buy() {\r\n    const [isBought, buy] = useState(false);\r\n    \r\n    const clickHandler = (isBought) => {\r\n        buy(isBought);\r\n    }\r\n    \r\n    return(\r\n        <div>\r\n            {\r\n            isBought ? <span className = 'thank-you'>Thank you, You have bought the product successfully!!</span> \r\n            : <span className = 'discount-info'>No discount, Regular price!!</span>\r\n            }\r\n            <br></br>\r\n            {\r\n                isBought ? <button className = 'back-btn' onClick = {() => clickHandler(false)}>Back</button>\r\n                : <button className = 'buy-btn' onClick = {() => clickHandler(true)}>Buy</button>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default Buy;\r\n","import './App.css';\nimport Buy from './Buy';\n\nfunction App (props) {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h2>React - Google Analytics Tag Manager Sample App</h2>\n        <Buy></Buy>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}